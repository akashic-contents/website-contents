import Skin = require("./Skin");
import BoneSet = require("./BoneSet");
import ContainerV2 = require("./ContainerV2");
import ContainerV3 = require("./ContainerV3");
import { Animation } from "./AnimeParams";
import * as vfx from "./vfx";
/**
 * アニメーションリソースクラス
 */
declare class Resource {
    skins: Skin[];
    boneSets: BoneSet[];
    animations: Animation[];
    effectParameters: vfx.EffectParameterObject[];
    constructor();
    /**
     * asapjテキストアセットを読み込む。関連するアセットがある場合、それも読み込む。
     *
     * すでに読み込んだaapjテキストアセットがあった場合、このResourceインスタンスから削除される。
     *
     * @param assetName asapjテキストアセット名
     * @param assets 利用できるアセット
     * @param ...otherAssets 利用できるアセット（可変長引数）
     */
    loadProject(assetName: string, assets: {
        [key: string]: g.Asset;
    }, ...otherAssets: {
        [key: string]: g.Asset;
    }[]): void;
    /**
     * スキンを取得する。
     *
     * @param name スキン名
     */
    getSkinByName(name: string): Skin;
    /**
     * ボーンセットを取得する。
     *
     * @param name ボーンセット名
     */
    getBoneSetByName(name: string): BoneSet;
    /**
     * アニメーションを取得する。
     *
     * @param name アニメーション名
     */
    getAnimationByName(name: string): Animation;
    /**
     * エフェクトパラメタを取得する。
     *
     * @param name エフェクパラメタ名
     */
    getEffectParameterByName(name: string): vfx.EffectParameterObject;
    protected loadProjectV2(data: ContainerV2, assets: {
        [key: string]: g.Asset;
    }, ...otherAssets: {
        [key: string]: g.Asset;
    }[]): void;
    protected loadProjectV3(data: ContainerV3, assets: {
        [key: string]: g.Asset;
    }, ...otherAssets: {
        [key: string]: g.Asset;
    }[]): void;
}
export = Resource;
